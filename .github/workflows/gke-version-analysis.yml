name: GKE Version Change Analysis

on:
  pull_request:
    paths:
      - 'gke-version.yaml'
    types: [opened, synchronize]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  detect-version-change:
    runs-on: ubuntu-latest
    outputs:
      old_controlplane_version: ${{ steps.detect.outputs.old_controlplane_version }}
      new_controlplane_version: ${{ steps.detect.outputs.new_controlplane_version }}
      old_nodes_version: ${{ steps.detect.outputs.old_nodes_version }}
      new_nodes_version: ${{ steps.detect.outputs.new_nodes_version }}
      has_changes: ${{ steps.detect.outputs.has_changes }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect version changes
        id: detect
        run: |
          # Get the base branch
          git fetch origin ${{ github.base_ref }}

          # Extract versions from current branch
          NEW_CP=$(grep -A 1 "controlplane:" gke-version.yaml | grep "version:" | awk '{print $2}')
          NEW_NODES=$(grep -A 1 "nodes:" gke-version.yaml | grep "version:" | awk '{print $2}')

          # Extract versions from base branch
          git checkout origin/${{ github.base_ref }} -- gke-version.yaml 2>/dev/null || true

          if [ -f gke-version.yaml ]; then
            OLD_CP=$(grep -A 1 "controlplane:" gke-version.yaml | grep "version:" | awk '{print $2}')
            OLD_NODES=$(grep -A 1 "nodes:" gke-version.yaml | grep "version:" | awk '{print $2}')
          else
            OLD_CP="none"
            OLD_NODES="none"
          fi

          # Restore current branch version
          git checkout HEAD -- gke-version.yaml

          echo "old_controlplane_version=$OLD_CP" >> $GITHUB_OUTPUT
          echo "new_controlplane_version=$NEW_CP" >> $GITHUB_OUTPUT
          echo "old_nodes_version=$OLD_NODES" >> $GITHUB_OUTPUT
          echo "new_nodes_version=$NEW_NODES" >> $GITHUB_OUTPUT

          if [ "$OLD_CP" != "$NEW_CP" ] || [ "$OLD_NODES" != "$NEW_NODES" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

          echo "Version changes detected:"
          echo "Controlplane: $OLD_CP -> $NEW_CP"
          echo "Nodes: $OLD_NODES -> $NEW_NODES"

  fetch-release-notes:
    needs: detect-version-change
    if: needs.detect-version-change.outputs.has_changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Kubernetes versions
        id: k8s_versions
        run: |
          OLD_VERSION="${{ needs.detect-version-change.outputs.old_controlplane_version }}"
          NEW_VERSION="${{ needs.detect-version-change.outputs.new_controlplane_version }}"

          # Extract K8s version (e.g., 1.32.8-gke.1134000 -> 1.32)
          OLD_K8S=$(echo $OLD_VERSION | cut -d. -f1,2)
          NEW_K8S=$(echo $NEW_VERSION | cut -d. -f1,2)

          echo "old_k8s=$OLD_K8S" >> $GITHUB_OUTPUT
          echo "new_k8s=$NEW_K8S" >> $GITHUB_OUTPUT

      - name: Download Kubernetes Release Notes
        run: |
          OLD_K8S="${{ steps.k8s_versions.outputs.old_k8s }}"
          NEW_K8S="${{ steps.k8s_versions.outputs.new_k8s }}"

          mkdir -p release-notes

          # Download new version release notes
          echo "Fetching Kubernetes $NEW_K8S release notes..."
          curl -sL "https://raw.githubusercontent.com/kubernetes/kubernetes/master/CHANGELOG/CHANGELOG-${NEW_K8S}.md" \
            -o release-notes/k8s-${NEW_K8S}.md || echo "Failed to fetch K8s $NEW_K8S"

      - name: Upload release notes artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes/
          retention-days: 30

  analyze-with-claude:
    needs: [detect-version-change, fetch-release-notes]
    if: needs.detect-version-change.outputs.has_changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download release notes
        uses: actions/download-artifact@v4
        with:
          name: release-notes
          path: release-notes/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Claude Code CLI
        run: |
          npm install -g @anthropic-ai/claude-code

      - name: Create analysis prompt
        run: |
          cat > analysis-prompt.txt << 'PROMPT_EOF'
          „ÅÇ„Å™„Åü„ÅØKubernetes„Å®GKE„ÅÆÂ∞ÇÈñÄÂÆ∂„Åß„Åô„ÄÇ

          release-notes/ „Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„ÅØ‰ª•‰∏ã„ÅÆ„Éï„Ç°„Ç§„É´„Åå„ÅÇ„Çä„Åæ„ÅôÔºö
          - analysis-context.md: „Éê„Éº„Ç∏„Éß„É≥Â§âÊõ¥„ÅÆ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„ÉàÊÉÖÂ†±
          - k8s-*.md: Kubernetes„ÅÆÂÖ¨Âºè„É™„É™„Éº„Çπ„Éé„Éº„Éà

          „Åì„Çå„Çâ„ÅÆ„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„Çì„ÅßÂàÜÊûê„Åó„ÄÅ‰ª•‰∏ã„ÅÆÊßãÈÄ†„ÅßMarkdownÂΩ¢Âºè„ÅÆÂΩ±ÈüøÂàÜÊûê„É¨„Éù„Éº„Éà„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          ---

          # GKE Version Upgrade Analysis

          ## üìä Version Change Summary

          „Éê„Éº„Ç∏„Éß„É≥Â§âÊõ¥„ÅÆÊ¶ÇË¶Å„ÇíË®òËºâÔºö
          - Â§âÊõ¥„É¨„Éô„É´: Major/Minor/Patch
          - Â§âÊõ¥ÁØÑÂõ≤: Kubernetes 1.X ‚Üí 1.Y
          - „Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„Éâ„Éë„Çπ: Áõ¥Êé•„Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„ÉâÂèØËÉΩ or ÊÆµÈöéÁöÑ„Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„ÉâÂøÖË¶Å

          ---

          ## üö® URGENT UPGRADE NOTES

          **ÊúÄÂÑ™ÂÖà‰∫ãÈ†Ö**: „É™„É™„Éº„Çπ„Éé„Éº„Éà„ÅÆ "Urgent Upgrade Notes" „Çª„ÇØ„Ç∑„Éß„É≥„ÇíÁ¢∫Ë™ç„Åó„ÄÅ‰ª•‰∏ã„ÇíË®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö

          - Âç≥Â∫ß„Å´ÂØæÂøú„ÅåÂøÖË¶Å„Å™Â§âÊõ¥
          - „ÇØ„É©„Çπ„Çø„ÅÆÂãï‰Ωú„Å´ÂΩ±Èüø„Åô„ÇãÈáçÂ§ß„Å™Â§âÊõ¥
          - „Éá„Éº„ÇøÊêçÂ§±„ÇÑÂèØÁî®ÊÄß„Å´ÂΩ±Èüø„Åô„ÇãÂïèÈ°å

          **Ë®òËºâÂΩ¢Âºè**:
          ```
          ### [„Çø„Ç§„Éà„É´]
          - **ÂΩ±Èüø**: „Å©„ÅÆ„Çà„ÅÜ„Å™ÂΩ±Èüø„Åå„ÅÇ„Çã„Åã
          - **ÂØæÂøú**: ‰Ωï„Çí„Åô„Åπ„Åç„Åã
          - **ÊúüÈôê**: „ÅÑ„Å§„Åæ„Åß„Å´ÂØæÂøú„Åô„Åπ„Åç„Åã
          ```

          „ÇÇ„ÅóË©≤ÂΩìÈ†ÖÁõÆ„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ "Ë©≤ÂΩì„Å™„Åó" „Å®ÊòéË®ò„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          ---

          ## üîí Security Updates

          „Çª„Ç≠„É•„É™„ÉÜ„Ç£Èñ¢ÈÄ£„ÅÆÂ§âÊõ¥„ÇíË®òËºâÔºö

          ### CVE‰øÆÊ≠£

          - **CVE-YYYY-XXXXX**: Ê¶ÇË¶Å„Å®ÂΩ±Èüø
          - ‰øÆÊ≠£ÂÜÖÂÆπ
          - Êé®Â•®„Ç¢„ÇØ„Ç∑„Éß„É≥

          ### „Çª„Ç≠„É•„É™„ÉÜ„Ç£Âº∑Âåñ

          - ËøΩÂä†„Åï„Çå„Åü„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê©üËÉΩ
          - „Éá„Éï„Ç©„É´„ÉàË®≠ÂÆö„ÅÆÂ§âÊõ¥

          ---

          **ÂàÜÊûê„ÅÆÈáçË¶Å„Å™„Éù„Ç§„É≥„Éà**:
          1. „É™„É™„Éº„Çπ„Éé„Éº„Éà„ÅÆ‰∫ãÂÆü„Å´Âü∫„Å•„ÅÑ„Å¶Ë®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          2. Êé®Ê∏¨„ÅØÈÅø„Åë„ÄÅ‰∏çÊòé„Å™ÁÇπ„ÅØ„ÄåË¶ÅÁ¢∫Ë™ç„Äç„Å®Ë®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          3. Urgent Upgrade Notes „ÅØÂøÖ„ÅöÁ¢∫Ë™ç„Åó„ÄÅÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÅØË©≥Á¥∞„Å´Ë®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          4. ÈùûÊé®Â•®API„ÅØ Pluto „ÅßÊ§úË®ºÂèØËÉΩ„Å™ÂΩ¢Âºè„ÅßË®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          5. actionable „Å™ÊÉÖÂ†±„ÇíÊèê‰æõ„Åô„Çã„Åì„Å®„ÇíÊúÄÂÑ™ÂÖà„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          PROMPT_EOF

      - name: Run Claude analysis (headless mode)
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "Starting Claude Code analysis in headless mode..."
          claude -p "$(cat analysis-prompt.txt)" > analysis-report.md || {
            echo "# Analysis Failed" > analysis-report.md
            echo "Claude Code analysis failed. Please check the logs." >> analysis-report.md
            exit 1
          }

      - name: Post analysis to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            const analysis = fs.readFileSync('analysis-report.md', 'utf8');

            const commentBody = `## üîÑ GKE Version Upgrade Analysis

            **Version Change**: \`${{ needs.detect-version-change.outputs.old_controlplane_version }}\` ‚Üí \`${{ needs.detect-version-change.outputs.new_controlplane_version }}\`

            ---

            ${analysis}

            ---

            <sub>ü§ñ Analyzed by Claude Code (Headless Mode) | [Download Full Report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})</sub>
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });

      - name: Upload analysis report artifact
        uses: actions/upload-artifact@v4
        with:
          name: gke-analysis-report
          path: analysis-report.md
          retention-days: 30

  # validate-version:
  #   needs: detect-version-change
  #   if: needs.detect-version-change.outputs.has_changes == 'true'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup gcloud CLI
  #       uses: google-github-actions/setup-gcloud@v2

  #     - name: Validate GKE version availability
  #       run: |
  #         chmod +x ./check-gke-version.sh

  #         if ./check-gke-version.sh; then
  #           echo "‚úÖ All versions are valid and available in GKE"
  #         else
  #           echo "‚ùå Version validation failed"
  #           echo "Please check the GKE release notes and update to a valid version"
  #           exit 1
  #         fi
